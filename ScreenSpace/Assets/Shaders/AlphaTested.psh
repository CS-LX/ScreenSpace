#version 300 es
#ifdef GLSL

// <Sampler Name='u_samplerState' Texture='u_texture' />

#ifdef GL_ES
precision highp float;
precision highp sampler2D;
#endif

uniform sampler2D u_texture;
uniform vec3 u_fogColor;
uniform vec2 u_solution;
#ifdef ALPHATESTED
uniform float u_alphaThreshold;
#endif

in vec4 v_color;
in vec2 v_texcoord;
in float v_fog;

in vec3 v_position;
in mat4 v_worldViewProjectionMatrix;

out vec4 fragColor;
	
void main()
{
	vec4 clipSpacePos = v_worldViewProjectionMatrix * vec4(v_position.xyz, 1.0);

	vec3 ndc = clipSpacePos.xyz / clipSpacePos.w;
	vec2 ScreenCoord = ndc.xy * 0.5 + 0.5;
	ScreenCoord = vec2(ScreenCoord.x, 1.0 - ScreenCoord.y);

	ScreenCoord *= vec2(16.0) * u_solution;
	ScreenCoord = mod(ScreenCoord, vec2(1.0));

	vec2 cell = floor(v_texcoord * vec2(16.0)) / vec2(16.0);
	ScreenCoord /= 16.0;
	ScreenCoord += cell;


	// Color
	vec4 result = v_color;

	// Texture
	result *= texture(u_texture, ScreenCoord);
	
	// Alpha threshold
#ifdef ALPHATESTED
	if (result.a <= u_alphaThreshold)
		discard;
#endif

	// Fog
	result.rgb = mix(result.rgb, u_fogColor * v_color.a, v_fog);
	
	// Return
	fragColor = result;
}

#endif
